#!/bin/bash

i=false
v=false
r=false

#Checking if the recyclebin folder exists and if it doesnot create one
if [ ! -d $HOME/recyclebin ]
then
	mkdir $HOME/recyclebin
fi

###FUNCTIONS###
#RecycleFile function to check and recycle folder
recycleFile(){
	#Checking conditions
	if [ $# -eq 0 ] #Checking if any file name was provided
	then
		echo "No File Name Provided!"
		exit 1
	elif [ ! -e $1 ] #Checking if the file name exists
	then
		echo "File with name $1 doesnot exist!"
	elif [ -d $1 ] #Checking if the name sent is a directory
	then
		echo "Directory $1 cannot be removed!"
	elif echo $1 | grep -q "recycle" #Checking if the user is trying to delete the command
	then
		echo "Attempting to delete recycle - OPERATION ABORTED!!!"
		exit 1
	else	#If everything is ok delete the file
		file_inode=$(ls -i $1 | cut -d " " -f1) #Getting the inode number of the file
		file_name=$(basename $1)  #Getting just the filename
		new_file_name=$file_name"_"$file_inode #Setting the new deleted filename 
		file_path=$(readlink -f $1) #Getting the current path of the file
		echo $new_file_name':'$file_path >> $HOME/.restore.info #Logging the filename and path to restoreinfo
		mv $1 $new_file_name	#Changing the name of the file to deleted file format
		mv $new_file_name $HOME/recyclebin #Moving the file to recyclebin
	fi
}

#Function to process when i option is sent with or without the v
iOption(){
	if [ ! -f $1 ] #Checking if the file name exists
        then
           	echo "File with name $1 doesnot exist"
        else
                read -p "Recycle file '$1'? " response
                case $response in
                        [yY])   recycleFile $1
                                if $v           #if v is passed along with i
                                then
                                        echo "Recycled '$1'"
                                fi
                                ;;
                        *)      ;;
                esac
        fi
}

#Function to process when only v option is sent
vOption(){
	if [ ! -f $1 ] #Check if the file name exists
        then
       		echo "File with name $1 doesnot exist"
      	else
        	recycleFile $1
             	echo  "Recycled '$1'"
    	fi

}

#Function to process the r option
rOption(){
	if [ ! -e $1 ] #Checking if the file or directory exist
	then
		echo "Directory or file with name $1 doesnot exist"
	else
		if [ -f $1 ]
		then
			recycleFile $1
		fi
		if [ -d $1 ]
		then
			if [ "$(ls -A $1)" ]	#Check if the directory is not empty
			then
				for file in $1/* #looping through the files in the directory
                        	do
                                	recycleFile $file
                        	done
                        	rmdir $1 #Remove only if the folder is empty

			else
				rmdir $1
				echo "Empty directory $1 removed"
			fi
		fi
	fi



}

###MAIN###

#Checking for options
while getopts :ivr opt
do
        case $opt in
                i)      i=true;;
                v) 	v=true;;
		r)	r=true;;
		*)	echo "Offending option value!"
			exit 1;;
        esac
done
#If no options provided
if [ $OPTIND -eq 1 ]
then
	for file in $@
	do
		recycleFile $file
	done
fi

shift $(($OPTIND -1))

#If options provided but no filename
if [ $# -eq 0 ]
then
        echo "No filename provided!"
        exit 1
fi

#If the option is i
if $i
then
	for file in $@
	do
		iOption $file
	done
fi

#if only v is passed
if ! $i && $v 
then
	for file in $@
	do
		vOption $file
	done
fi


#if r is passed
if $r
then
	for file in $@
	do
		rOption $file
	done
fi









